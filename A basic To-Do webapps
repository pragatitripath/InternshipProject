<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do App</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f5f5f5;
        }

        h1 {
            margin: 20px;
        }

        #app {
            width: 80%;
            max-width: 600px;
        }

        input[type="text"] {
            width: calc(100% - 100px);
            padding: 10px;
            margin-right: 10px;
        }

        button {
            padding: 10px 20px;
        }

        #taskList, #completedTasksSection {
            margin-top: 20px;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            padding: 10px;
            border: 1px solid #ddd;
            margin-bottom: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        button.edit, button.delete, button.complete {
            margin-left: 5px;
        }

    </style>
    <script>
        let tasks = [];

        function addTask() {
            const taskInput = document.getElementById('taskInput');
            const taskText = taskInput.value.trim();
            if (taskText) {
                const task = {
                    id: Date.now(),
                    text: taskText,
                    completed: false,
                    addedAt: new Date().toLocaleString(),
                    completedAt: null
        };
                    tasks.push(task);
                    taskInput.value = '';
                    renderTasks();
            }
        }

        function renderTasks() {
            const pendingTasksList = document.getElementById('pendingTasks');
            const completedTasksList = document.getElementById('completedTasks');
            pendingTasksList.innerHTML = '';
            completedTasksList.innerHTML = '';

            tasks.forEach(task => {
            const taskElement = document.createElement('li');
            taskElement.innerHTML = `
            ${task.text} (Added: ${task.addedAt})
                <button class="edit" onclick="editTask(${task.id})">Edit</button>
                <button class="complete" onclick="completeTask(${task.id})">${task.completed ? 'Undo' : 'Complete'}</button>
                <button class="delete" onclick="deleteTask(${task.id})">Delete</button>
            `;

            if (task.completed) {
                taskElement.innerHTML += ` (Completed: ${task.completedAt})`;
                completedTasksList.appendChild(taskElement);
            } else {
                pendingTasksList.appendChild(taskElement);
            }
            });
            }

            function completeTask(id) {
                const task = tasks.find(t => t.id === id);
                if (task) {
                    task.completed = !task.completed;
                    if (task.completed) {
                        task.completedAt = new Date().toLocaleString();
                    } else {
                    task.completedAt = null;
                    }
                renderTasks();
                }
            }

            function editTask(id) {
                const task = tasks.find(t => t.id === id);
                if (task) {
                    const newText = prompt('Edit task:', task.text);
                    if (newText) {
                        task.text = newText;
                        renderTasks();
                    }
                }
            }

            function deleteTask(id) {
                tasks = tasks.filter(t => t.id !== id);
                renderTasks();
            }

        // Initial rendering
        renderTasks();

    </script>
</head>
<body>
    <h1>To-Do App</h1>
    <div id="app">
        <input type="text" id="taskInput" placeholder="Enter a new task" />
        <button onclick="addTask()">Add Task</button>

        <div id="taskList">
            <h2>Pending Tasks</h2>
            <ul id="pendingTasks"></ul>
        </div>

        <div id="completedTasksSection">
            <h2>Completed Tasks</h2>
            <ul id="completedTasks"></ul>
        </div>
    </div>
    
</body>
</html>
